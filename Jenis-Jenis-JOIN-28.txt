Jenis-Jenis Join

  Sebelum kita sudah bahas tentang join table, tapi sebenernya ada banyak sekali 
Jenis-Jenis JOIN table di MySQL, diantaranya :

- INNER JOIN

- LEFT JOIN

- RIGHT JOIN

- CROSS JOIN


# INNER JOIN 

- INNER JOIN adalah mekanisme JOiN, dimana terdapat relasi antara table pertama dari
  table kedua
- Jika ada data di table pertama yang tidak memiliki relasi di table kedua ataupun
  sebaiknya, maka hasil INNER JOIN di MySQL
- Ini adalah default JOIN di MySQL
- Jika kita menggunakan JOIN seperti yang sudah kita praktekkan sebelumnya, sebenarnya'
  itu akan melakukan INNER JOIN

      MELAKUKAN INNER JOIN
          
          SELECT * FROM categories
          INNER JOIN products ON (products.id_category = categories.id);
          


# LEFT JOIN

- LEFT JOIN adalah mekanisme JOIN seperti INNER JOIN, namun semua data di 
  table pertama
  akan diambil juga
- Jika ada yang tidak memiliki relasi di table kedua, maka hasilnya akan NULL

      MELAKUKAN LEFT JOIN :
            
            SELECT * FROM categories
            LEFT JOIN products ON (products.id_category = categories.id);


# RIGHT JOIN

- RIGHT JOIN adalah mekanisme JOIN seperti INNER JOIN, namun semua data di table
  kedua akan diambil juga
- Jika ada yang tidak memiliki relasi di table pertama, maka hasilnya akan NULL

      MELAKUKAN RIGHT JOIN :
            
            SELECT * FROM categories
            RIGHT JOIN products ON (products.id_category = categories.id)

# CROSS JOIN

- CROSS JOIN adalah salah satu JOIN yang sangat jarang sekali digunakan
- CROSS JOIN adalah melakukan join dengan cara mengkalikan data di table pertama
  dengan data di table kedua
- Artinya jika ada 5 data di tabel pertama, dan 5 data di table kedua akan 
  menghasilkan 25 kombinasi data (5 x 5)
- Sekali lagi perlu di ingat, ini adalah JOIN yang sangay jarang sekali digunakan

      MENGGUNAKAN CROSS :
            
             SELECT * FROM categories
             CROSS JOIN products;


# MEMBUAT TABLE PERKALIAN

    CREATE TABLE numbers
    (
        id  INT NOT NULL,
        PRIMARY KEY (id)
    ) ENGINE = InnoDB;
    
    INSERT TABEL :
        
        INSERT INTO numbers 
        VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10)
        
     MENGGUNAKAN CROSS JOIN :
        
        SELECT numbers1.id, numbers2.id, (numbers1.id * numbers2.id)
        FROM numbers AS numbers1
             CROSS JOIN numbers AS numbers2
        ORDER BY numbers1.id, numbers2.id;
 





