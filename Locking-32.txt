# LOCKING

- Locking adalah proses mengunci data di DBMS

- Proses mengunci data sangat penting dilakukan, salah satunya data benar-benar 
  terjaminkonsistensinya
  
- Karena pada kenyataannya, aplikasi yang akan kita buat pasti digunakan oleh
  banyak pengguna, dan banyak pengguna tersebut bisa saja akan mengakses data yang
  sama, jika tidak ada proses locking, bisa dipastikan akan terjadi RACE
  CONDITION, yaitu proses balapan ketika mengubah data yang sama
  
- Contoh saja, ketika kita belanja di toko online, kita akan balapan 
  membeli barang yang sama, jika data tidak terjaga, bisa jadi kita salah 
  mengUPDATE stock kerena pada saat yang bersamaan banyak yang melakukan perubahan 
  stock barang
  

# LOCKING RECORD

- Saat kita melakukan proses TRANSACTION, lalu kita melakukan proses 
  perubahan data, data yang kita ubah tersebut akan secara otomatis di LOCK
- Hal ini membuat proses TRANSACTION sangat aman

- Oleh karena itu, sangat disarankan untuk selalu menggunakan fitur
  TRANSACTION ketika memanipulasi data di database, terutama ketika perintah 
  manipulasinya lebih dari satu kali
  
- Locking ini akan membuat sebuah proses perubahan yang dilakukan oleh pihak 
  lain akan diminta untuk menunggu
  
- Data akan di lock sampai kita melakukan COMMIT atau ROLLBACK transaksi tersebut

     MELAKUKAN LOCKING RECORD :
     
        -----------------------------------------------------------------------------
          ----------                          |   ----------
          | User 1 |                          |   | User 2 |
          ----------                          |   ----------
                                              |
          START TRANSACTION;                  |   START TRANSACTION
                                              |   
          SELECT * FROM guestbooks;           |   SELECT * FROM guestbooks
                                              |   
          UPDATE guestbooks                   |   UPDATE guestbooks
          SET title = 'Diubah Oleh User 1';   |   SET title = 'Diubah Oleh User 2'
                                              | 
          COMMIT;                             |   COMMIT;
       -------------------------------------------------------------------------------
                                                                   ^
                                                                   |
                                                                   |
                                                      Akan di LOCK sama User 1,
                                                  sampai User 1 COMMIT dan UPDATE,
                                                     Baru User 2 akan di eksekusi
                                                        
          


# LOCKING RECORD MANUAL

- Selain secara otomatis, kadang saat kita membuat aplikasi, kita juga 
  sering melakukan SELECT query terlebih dahulu sebelum melakukan proses UPDATE 
  misalnya
  
- Jika kita ingin melakukan locking sebuah data secara manual, kita bisa 
  tambahkan perinntah FOR UPDATE di belakang query SELECT
  
- Saat kita lock record yang kita select, maka jika ada proses lain akan melakukan
  UPDATE, DELETE atau SELECT FOR UPDATE lagi, maka proses lain diminta 
  menunggu sampai kita selesai melakukan COMMIT atau ROLLBACK transaction

     MELAKUKAN LOCKING RECORD MANUAL :
     
     ---------------------------------------------------------------------------
        ----------                        |  ----------
        | User 1 |                        |  | User 2 |
        ----------                        |  ----------
                                          |   
        START TRANSACTION;                |  START TRANSACTION;
                                          |
        SELECT * FROM products            |  SELECT * FROM products 
        WHERE id = 'P0001' FOR UPDATE;    |  WHERE id = 'P0001' FOR UPDATE;
                                          |
        UPDATE products                   |  UPDATE products
        SET quantity = quantity - 10      |  SET quantity = quantity - 10
        WHERE id = 'P0001';               |  WHERE id = 'P0001'
                                          |  
        COMMIT;                           |  COMMIT;
                                          |
      ---------------------------------------------------------------------------
    
  
# Deadlock
  
- saat kita terlalu banyak melakukan proses Locking, hati-hati akan masalah 
  yang bisa terjadi, yaitu DEADLOCK
  
- Deadlock adalah situasi ada 2 proses yang saling menunggu satu sama lain,
  namun data yang ditunggu dua-duanya di lock oleh proses lainnya, sehingga proses
  menunggunya ini tidak akan pernah selesai
  
  CONTOH DEADLOCK :
    
    -> Proses 1 melakukan SELECT FOR UPDATE untuk data 001
    
    -> Proses 2 melakukan SELECT FOR UPDATE untuk data 002
    
    -> Proses 1 melakukan SELECT FOR UPDATE untuk data 002, diminta menunggu
       karena di lock oleh Proses 2
       
    -> Proses 2 melakukan SELECT FOR UPDATE untuk data 001, diminta menunggu
       karena di lock oleh Proses 1
       
    -> Akhirnya Proses 1 dan Proses 2 saling menunggu 
    
    -> Deadlock Terjadi
  
  
   Simulasi DEADLOCK :
      
      --------------------------------------------------------------------------
      # DEADLOCK User 1                 | # DEADLOCK User 2
                                        | 
        START TRANSACTION;              | START TRANSACTION  
                                        |  
        SELECT * FROM products          | SELECT * FROM products
        WHERE id = 'P0001' FOR UPDATE   | WHERE id = 'P0002' FOR UPDATE
                                        |
        SELECT * FROM products          | SELECT * FROM products   
        WHERE id = 'P0002' FOR UPDATE   | WHERE id = 'P0001' FOR UPDATE
      ---------------------------------------------------------------------------
                        |                           |  
                        |                           |
                        -----------------------------
                                       | 
                                       |
                                    DeadLock 
                       Maka Semua Transaction Akan di ROLLBACK   
                                  
# LOCKING TABLE

- MySQL mendukung proses locking terhadap sebuah tabel

- Jika kita me lock table, artinya satu seluruh data di table tersebut 
  akan di Lock
  
- Ada 2 jenis lock table, yaitu READ dan WRITE

- Cara melakukan locking table adalah dengan perintah 
        -> LOCK TABLES nama_tabel READ;
        -> LOCK TABLES nama_tabel WRITE;
        
- Setelah selesai melakukan lock table, kita bisa melakukan unlock 
  dengan perintah : UNLOCK TABLES
  
     Behaviour Lock Tables :
     
        --------------------------------------------------------------------------
        | Perintah     | Proses yang Melakukan Lock | Proses Lain                |
        |--------------|----------------------------|----------------------------|
        | READ         | Hanya bisa melakukan read  | Hanya bisa melakukan read  |
        |              | terhadap tabel tersebut    | terhadap tabel tersebut,   | 
        |              |                            | tidak bisa melakukan write |
        |--------------|----------------------------|----------------------------|
        | WRITE        | Bisa melakukan read dan    | Tidak bisa melakukan read  |
        |              | write terhadap tabel       | terhadap tabel tersebut,   |
        |              | tersebut                   | tidak bisa melakukan write |
        |--------------|----------------------------|----------------------------|


    Simulasi READ
    
        -----------------------                   ----------------------- 
        | # LOCK TABLE User 1 |                   | # LOCK TABLE User 2 |
        --------------------------------|--------------------------------
        |                               |                               | 
        | LOCK TABLES products READ;    | SELECT * FROM bisa products;  |
        |                               |                               |
        | UPDATE products               | UPDATE products               |
        | SET quantity = 100            | SET quantity = 100            |
        | WHERE id = 'P0001';           | WHERE id = 'P0001';           |
        |                               |                               |
        | UNLOCK TABLES;                |                               |
        |                               |                               |
        -----------------------------------------------------------------
                        ^                              ^
                        |                              |
                        |                              |
                        |                              |
                 Hanya Bisa Read               HANYA BISA READ
               HANYA LOCK TABLES READ           GK BISA WRITE


    Simulasi WRITE
    
        -----------------------                   ----------------------- 
        | # LOCK TABLE User 1 |                   | # LOCK TABLE User 2 |
        --------------------------------|--------------------------------
        |                               |                               | 
        | LOCK TABLES products WRITE;   | SELECT * FROM bisa products;  |
        |                               |                               |
        | UPDATE products               | UPDATE products               |
        | SET quantity = 100            | SET quantity = 100            |
        | WHERE id = 'P0001';           | WHERE id = 'P0001';           |
        |                               |                               |
        | UNLOCK TABLES;                |                               |
        |                               |                               |
        -----------------------------------------------------------------
                        ^                              ^
                        |                              |
                        |                              |
                        |                              |
                     Bisa READ                 Tidak BISA READ
                  Dan Bisa WRITE                GK BISA WRITE






    
